<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 全自动方式是spring直接拿到目标类，然后后处理bean中产生一个代理 -->
	<!-- 创建一个目标类 -->
	<bean id="serviceid" class="com.aop.ｅ_aspectj.UserServicImp"></bean>
	<!-- 创建一个且切面类 -->
	<bean id="myaspectid" class="com.aop.ｅ_aspectj.MyAspect"></bean>
	<aop:config>
		<aop:aspect ref="myaspectid">
			<aop:pointcut id="mypc" expression="execution(* com.aop.ｅ_aspectj.UserServicImp.*(..))" />
			<!-- 前置通知 -->
			<!-- <aop:before method="beforead" pointcut-ref="mypc"/> -->
			<!-- 后置通知 -->
			<!-- <aop:after-returning method="afterad" pointcut-ref="mypc" returning="reee"/> -->
			<!-- <aop:around method="aroundad" pointcut-ref="mypc" /> -->
			<!-- throw -->
			<!-- <aop:after-throwing method="throwad" pointcut-ref="mypc" throwing="ddd"/> -->
			<!-- after 最终通知 -->
			<aop:after method="afterad" pointcut-ref="mypc"/>

		</aop:aspect>
	</aop:config>

</beans>
